
function f_gold ( graph, initial ) {
    var n = graph.length;
    var p = Array.from(Array(n).keys());
    var size = Array(n).fill(1);
    function find ( x ) {
        if ( p[x] != x ) {
            p[x] = find(p[x]);
        }
        return p[x];
    }
    for ( var i = 0; i < n; i++ ) {
        for ( var j = i + 1; j < n; j++ ) {
            if ( graph[i][j] == 1 ) {
                var pa = find(i);
                var pb = find(j);
                if ( pa == pb ) {
                    continue;
                }
                p[pa] = pb;
                size[pb] += size[pa];
            }
        }
    }
    var mi = Number.POSITIVE_INFINITY;
    var res = initial[0];
    initial.sort();
    for ( var i = 0; i < initial.length; i++ ) {
        var t = 0;
        var s = new Set();
        for ( var j = 0; j < initial.length; j++ ) {
            if ( i == j ) {
                continue;
            }
            if ( s.has(find(initial[j])) ) {
                continue;
            }
            s.add(find(initial[j]));
            t += size[find(initial[j])];
        }
        if ( mi > t ) {
            mi = t;
            res = initial[i];
        }
    }
    return res;
}

