--- a/target.fixed.js
+++ b/target.fixed.js
@@ -83,7 +83,7 @@ class LongestCommonSubsequence extends StringDistance {
         if (s0 === s1) {
             return 0.0;
         }
-        return s0.length + s1.length - 2 * this.length(s0, s1);
+        return s0.length + s1.length - 2 * this.constructor.length(s0, s1);
     }
     static length(s0, s1) {
         if (s0 === null) {
@@ -133,7 +133,7 @@ class MetricLCS {
         if (max_len === 0) {
             return 0.0;
         }
-        return 1.0 - (1.0 * this.lcs.length(s0, s1)) / max_len;
+        return 1.0 - (1.0 * this.lcs.constructor.length(s0, s1)) / max_len;
     }
 }
 
--- a/target.fixed.js.srcmap
+++ b/target.fixed.js.srcmap
@@ -281,7 +281,7 @@ class LongestCommonSubsequence extends StringDistance {   // --- py stmt 35
         if (s0 === s1) {   // --- py stmt 41
             return 0.0;   // --- py stmt 42
         }
-        return s0.length + s1.length - 2 * this.length(s0, s1);   // --- py stmt 43
+        return s0.length + s1.length - 2 * this.constructor.length(s0, s1);   // --- py stmt 43
     }
     static length(s0, s1) {   // --- py stmt 45
         if (s0 === null) {   // --- py stmt 46
@@ -330,7 +330,7 @@ class MetricLCS {   // --- py stmt 60
         if (max_len === 0) {   // --- py stmt 71
             return 0.0;   // --- py stmt 72
         }
-        return 1.0 - (1.0 * this.lcs.length(s0, s1)) / max_len;   // --- py stmt 73
+        return 1.0 - (1.0 * this.lcs.constructor.length(s0, s1)) / max_len;   // --- py stmt 73
     }
 }
 
