--- a/target.fixed.js
+++ b/target.fixed.js
@@ -255,7 +255,7 @@ class OverlapCoefficient {
 ///// Segment END
 
 ///// Segment BEGIN QGram DONE
-class QGram {
+class QGram extends classMultiExtend(ShingleBased, StringDistance) {
     constructor(k = 3) {
         super();
         this.k = k;
@@ -220,9 +220,9 @@ class OptimalStringAlignment extends StringDistance {
 ///// Segment END
 
 ///// Segment BEGIN OverlapCoef DONE
-class OverlapCoefficient {
+class OverlapCoefficient extends classMultiExtend(ShingleBased, NormalizedStringDistance, NormalizedStringSimilarity) {
     constructor(k = 3) {
-        this.k = k;
+        super(); this.k = k;
     }
     distance(s0, s1) {
         return 1.0 - this.similarity(s0, s1);
@@ -240,14 +240,14 @@ class OverlapCoefficient {
         let union = new Set();
         let profile0 = this.get_profile(s0);
         let profile1 = this.get_profile(s1);
-        for (let k of profile0.keys()) {
+        for (let k of Object.keys(profile0)) {
             union.add(k);
         }
         for (let k of profile1.keys()) {
             union.add(k);
         }
         let inter = Math.floor(profile0.size + profile1.size - union.size);
         return inter / Math.min(profile0.size, profile1.size);
     }
 }
 
--- a/target.fixed.js.srcmap
+++ b/target.fixed.js.srcmap
@@ -399,21 +399,21 @@ class OverlapCoefficient {   // --- py stmt 102
         let union = new Set();   // --- py stmt 114
         let profile0 = this.get_profile(s0);   // --- py stmt 115
         let profile1 = this.get_profile(s1);   // --- py stmt 115
-        for (let k of profile0.keys()) {   // --- py stmt 116
+        for (let k of Object.keys(profile0)) {   // --- py stmt 116
             union.add(k);   // --- py stmt 117
         }
         for (let k of profile1.keys()) {   // --- py stmt 118
             union.add(k);   // --- py stmt 119
         }
         let inter = Math.floor(profile0.size + profile1.size - union.size);   // --- py stmt 120
         return inter / Math.min(profile0.size, profile1.size);   // --- py stmt 121
     }
 }
 
 
 
 
-class QGram {   // --- py stmt 122
+class QGram extends classMultiExtend(ShingleBased, StringDistance) {   // --- py stmt 122
     constructor(k = 3) {   // --- py stmt 123
         super();   // --- py stmt 124
         this.k = k;   // --- py stmt 124
@@ -379,9 +379,9 @@ class OptimalStringAlignment extends StringDistance {   // --- py stmt 75
 
 
 
-class OverlapCoefficient {   // --- py stmt 102
+class OverlapCoefficient extends classMultiExtend(ShingleBased, NormalizedStringDistance, NormalizedStringSimilarity) {   // --- py stmt 102
     constructor(k = 3) {   // --- py stmt 103
-        this.k = k;   // --- py stmt 104
+        super(); this.k = k;   // --- py stmt 104
     }
     distance(s0, s1) {   // --- py stmt 105
         return 1.0 - this.similarity(s0, s1);   // --- py stmt 106
