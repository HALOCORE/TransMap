--- a/target.fixed.js
+++ b/target.fixed.js
@@ -722,11 +736,11 @@ class HTMLParser extends ParserBase {
     // true, force handling all data as if followed by EOF marker.
     goahead(end) {
         let rawdata = this.rawdata;
-        let i = 0;
+        let i = 0; let j = 0;
         let n = rawdata.length;
         while (i < n) {
             if (this.convert_charrefs && !this.cdata_elem) {
-                let j = rawdata.indexOf('<', i);
+                j = rawdata.indexOf('<', i);
                 if (j < 0) {
                     // if we can't find the next <, either we are at the end
                     // or there's more text incoming.  If the latter is True,
@@ -744,12 +758,12 @@ class HTMLParser extends ParserBase {
             } else {
                 let match = this.interesting.exec(rawdata.slice(i));  // < or &
                 if (match) {
-                    let j = match.index + i;
+                    j = match.index + i;
                 } else {
                     if (this.cdata_elem) {
                         break;
                     }
-                    let j = n;
+                    j = n;
                 }
             }
             if (i < j) {
@@ -1,5 +1,12 @@
 ///// Segment IGNORE BEGIN
 "use strict";
+
+let startsWithString = "";
+function startsWith(prefix, startIndex = 0) {
+    const slicedString = [...startsWithString].slice(startIndex, startIndex + prefix.length);
+    return slicedString.join('') == prefix;
+}
+
 const name2codepoint = {
     'AElig':    0x00c6, // latin capital letter AE = latin capital ligature AE, U+00C6 ISOlat1
     // omitted
@@ -761,5 +775,5 @@ class HTMLParser extends ParserBase {
             }
             i = this.updatepos(i, j);
             if (i == n) break;
-            let startswith = rawdata.startsWith;
+            let startswith = startsWith; startsWithString = rawdata;
             if (startswith('<', i)) {
--- a/target.fixed.js.srcmap
+++ b/target.fixed.js.srcmap
@@ -1680,11 +1681,11 @@ class HTMLParser extends ParserBase {   // --- py stmt 15001
     // true, force handling all data as if followed by EOF marker.
     goahead(end) {   // --- py stmt 16001
         let rawdata = this.rawdata;   // --- py stmt 16002
-        let i = 0;   // --- py stmt 16003
+        let i = 0; let j = 0;   // --- py stmt 16003
         let n = rawdata.length;   // --- py stmt 16004
         while (i < n) {   // --- py stmt 16005
             if (this.convert_charrefs && !this.cdata_elem) {   // --- py stmt 16006
-                let j = rawdata.indexOf('<', i);   // --- py stmt 16007
+                j = rawdata.indexOf('<', i);   // --- py stmt 16007
                 if (j < 0) {   // --- py stmt 16008
                     // if we can't find the next <, either we are at the end
                     // or there's more text incoming.  If the latter is True,
@@ -1702,12 +1703,12 @@ class HTMLParser extends ParserBase {   // --- py stmt 15001
             } else {   // --- py stmt 16013
                 let match = this.interesting.exec(rawdata.slice(i));  // < or &   // --- py stmt 16014
                 if (match) {   // --- py stmt 16015
-                    let j = match.index + i;   // --- py stmt 16016
+                    j = match.index + i;   // --- py stmt 16016
                 } else {   // --- py stmt 16017
                     if (this.cdata_elem) {   // --- py stmt 16018
                         break;   // --- py stmt 16019
                     }
-                    let j = n;   // --- py stmt 16020
+                    j = n;   // --- py stmt 16020
                 }
             }
             if (i < j) {   // --- py stmt 16021
@@ -1719,5 +1720,5 @@ class HTMLParser extends ParserBase {   // --- py stmt 15001
             }
             i = this.updatepos(i, j);   // --- py stmt 16026
             if (i == n) break;   // --- py stmt 16027
-            let startswith = rawdata.startsWith;   // --- py stmt 16028
+            let startswith = startsWith; startsWithString = rawdata;   // --- py stmt 16028
             if (startswith('<', i)) {   // --- py stmt 16029
--- a/target.fixed.js.traceconfig.json
+++ b/target.fixed.js.traceconfig.json
@@ -1,4 +1,4 @@
 {
-  "disable_src_lines": [],
+  "disable_src_lines": [167,627,630,706,741,968,211,682,683,691],
   "trace_cmp": []
 }
\ No newline at end of file