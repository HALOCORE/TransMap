{
  "src_anno_stmts": [
    [
      "### floodFill",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(image: List[List[int]], sr: int, sc: int, newColor: int",
      [
        2
      ]
    ],
    [
      ") -> List[List[int]]:",
      null
    ],
    [
      "    def dfs(i, j, oc, nc):",
      [
        3
      ]
    ],
    [
      "        if (",
      [
        4
      ]
    ],
    [
      "            i < 0",
      null
    ],
    [
      "            or i >= len(image)",
      null
    ],
    [
      "            or j < 0",
      null
    ],
    [
      "            or j >= len(image[0])",
      null
    ],
    [
      "            or image[i][j] != oc",
      null
    ],
    [
      "            or image[i][j] == nc",
      null
    ],
    [
      "        ):",
      null
    ],
    [
      "            return",
      [
        5
      ]
    ],
    [
      "        image[i][j] = nc",
      [
        6
      ]
    ],
    [
      "        for x, y in [[0, 1], [0, -1], [1, 0], [-1, 0]]:",
      [
        7
      ]
    ],
    [
      "            dfs(i + x, j + y, oc, nc)",
      [
        8
      ]
    ],
    [
      "    dfs(sr, sc, image[sr][sc], newColor)",
      [
        9
      ]
    ],
    [
      "    return image",
      [
        10
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(image, sr, sc, newColor) {",
      [
        2
      ]
    ],
    [
      "    function dfs(i, j, oc, nc) {",
      [
        3
      ]
    ],
    [
      "        if (i < 0 || i >= image.length || j < 0 || j >= image[0].length || image[i][j] != oc || image[i][j] == nc) {",
      [
        4
      ]
    ],
    [
      "            return;",
      [
        5
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        image[i][j] = nc;",
      [
        6
      ]
    ],
    [
      "        for (let x = 0; x < 2; x++) {",
      [
        7
      ]
    ],
    [
      "            for (let y = 0; y < 2; y++) {",
      [
        7
      ]
    ],
    [
      "                dfs(i + x, j + y, oc, nc);",
      [
        8
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    dfs(sr, sc, image[sr][sc], newColor);",
      [
        9
      ]
    ],
    [
      "    return image;",
      [
        10
      ]
    ],
    [
      "}",
      null
    ]
  ]
}