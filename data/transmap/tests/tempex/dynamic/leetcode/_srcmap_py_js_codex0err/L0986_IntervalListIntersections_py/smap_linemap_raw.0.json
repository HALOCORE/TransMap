{
  "src_anno_stmts": [
    [
      "### intervalIntersection",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(firstList: List[List[int]], secondList: List[List[int]]",
      [
        2
      ]
    ],
    [
      ") -> List[List[int]]:",
      null
    ],
    [
      "    i = j = 0",
      [
        3
      ]
    ],
    [
      "    ans = []",
      [
        4
      ]
    ],
    [
      "    while i < len(firstList) and j < len(secondList):",
      [
        5
      ]
    ],
    [
      "        s1, e1, s2, e2 = *firstList[i], *secondList[j]",
      [
        6
      ]
    ],
    [
      "        l, r = max(s1, s2), min(e1, e2)",
      [
        7
      ]
    ],
    [
      "        if l <= r:",
      [
        8
      ]
    ],
    [
      "            ans.append([l, r])",
      [
        9
      ]
    ],
    [
      "        if e1 < e2:",
      [
        10
      ]
    ],
    [
      "            i += 1",
      [
        11
      ]
    ],
    [
      "        else:",
      [
        12
      ]
    ],
    [
      "            j += 1",
      [
        13
      ]
    ],
    [
      "    return ans",
      [
        14
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(firstList, secondList) {",
      [
        2
      ]
    ],
    [
      "    var i = j = 0;",
      [
        3
      ]
    ],
    [
      "    var ans = [];",
      [
        4
      ]
    ],
    [
      "    while (i < firstList.length && j < secondList.length) {",
      [
        5
      ]
    ],
    [
      "        var s1 = firstList[i][0];",
      [
        6
      ]
    ],
    [
      "        var e1 = firstList[i][1];",
      [
        6
      ]
    ],
    [
      "        var s2 = secondList[j][0];",
      [
        6
      ]
    ],
    [
      "        var e2 = secondList[j][1];",
      [
        6
      ]
    ],
    [
      "        var l = Math.max(s1, s2);",
      [
        7
      ]
    ],
    [
      "        var r = Math.min(e1, e2);",
      [
        7
      ]
    ],
    [
      "        if (l <= r) {",
      [
        8
      ]
    ],
    [
      "            ans.push([l, r]);",
      [
        9
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        if (e1 < e2) {",
      [
        10
      ]
    ],
    [
      "            i += 1;",
      [
        11
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        else {",
      [
        12
      ]
    ],
    [
      "            j += 1;",
      [
        13
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    return ans;",
      [
        14
      ]
    ],
    [
      "}",
      null
    ]
  ]
}