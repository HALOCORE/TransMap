
### Python
### evalRPN 
from typing import *   # --- py stmt 1
def f_gold(tokens: List[str]) -> int:   # --- py stmt 2
    nums = []   # --- py stmt 3
    for t in tokens:   # --- py stmt 4
        if len(t) > 1 or t.isdigit():   # --- py stmt 5
            nums.append(int(t))   # --- py stmt 6
        else:   # --- py stmt 7
            if t == "+":   # --- py stmt 8
                nums[-2] += nums[-1]   # --- py stmt 9
            elif t == "-":   # --- py stmt 10
                nums[-2] -= nums[-1]   # --- py stmt 11
            elif t == "*":   # --- py stmt 12
                nums[-2] *= nums[-1]   # --- py stmt 13
            else:   # --- py stmt 14
                nums[-2] = int(nums[-2] / nums[-1])   # --- py stmt 15
            nums.pop()   # --- py stmt 16
    return nums[0]   # --- py stmt 17

### JavaScript
"use strict";
function f_gold(tokens) {   // --- py stmt 2
    var nums = [];   // --- py stmt 3
    for (var t in tokens) {   // --- py stmt 4
        if (t.length > 1 || /^\d+$/.test(t)) {   // --- py stmt 5
            nums.push(parseInt(t));   // --- py stmt 6
        }
        else {   // --- py stmt 7
            if (t == "+") {   // --- py stmt 8
                nums[nums.length - 2] += nums[nums.length - 1];   // --- py stmt 9
            }
            else if (t == "-") {   // --- py stmt 10
                nums[nums.length - 2] -= nums[nums.length - 1];   // --- py stmt 11
            }
            else if (t == "*") {   // --- py stmt 12
                nums[nums.length - 2] *= nums[nums.length - 1];   // --- py stmt 13
            }
            else {   // --- py stmt 14
                nums[nums.length - 2] = parseInt(nums[nums.length - 2] / nums[nums.length - 1]);   // --- py stmt 15
            }
            nums.pop();   // --- py stmt 16
        }
    }
    return nums[0];   // --- py stmt 17
}

