{
  "src_anno_stmts": [
    [
      "### letterCombinations",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(digits: str) -> List[str]:",
      [
        2
      ]
    ],
    [
      "    n = len(digits)",
      [
        3
      ]
    ],
    [
      "    if n == 0:",
      [
        4
      ]
    ],
    [
      "        return []",
      [
        5
      ]
    ],
    [
      "    chars = ['abc', 'def', 'ghi', 'jkl', 'mno', 'pqrs', 'tuv', 'wxyz']",
      [
        6
      ]
    ],
    [
      "    strs = [chars[int(d) - 2] for d in digits]",
      [
        7
      ]
    ],
    [
      "    res = []",
      [
        8
      ]
    ],
    [
      "    for s in strs:",
      [
        9
      ]
    ],
    [
      "        if not res:",
      [
        10
      ]
    ],
    [
      "            res = list(s)",
      [
        11
      ]
    ],
    [
      "        else:",
      [
        12
      ]
    ],
    [
      "            cache = []",
      [
        13
      ]
    ],
    [
      "            for item in res:",
      [
        14
      ]
    ],
    [
      "                for letter in s:",
      [
        15
      ]
    ],
    [
      "                    cache.append(item + letter)",
      [
        16
      ]
    ],
    [
      "            res = cache",
      [
        17
      ]
    ],
    [
      "    return res",
      [
        18
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(digits) {",
      [
        2
      ]
    ],
    [
      "    var n = digits.length;",
      [
        3
      ]
    ],
    [
      "    if (n == 0) {",
      [
        4
      ]
    ],
    [
      "        return [];",
      [
        5
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    var chars = ['abc', 'def', 'ghi', 'jkl', 'mno', 'pqrs', 'tuv', 'wxyz'];",
      [
        6
      ]
    ],
    [
      "    var strs = [];",
      [
        7
      ]
    ],
    [
      "    for (var d of digits) {",
      [
        7
      ]
    ],
    [
      "        strs.push(chars[parseInt(d) - 2]);",
      [
        7
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    var res = [];",
      [
        8
      ]
    ],
    [
      "    for (var s of strs) {",
      [
        9
      ]
    ],
    [
      "        if (res.length === 0) {",
      [
        10
      ]
    ],
    [
      "            res = Array.from(s);",
      [
        11
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        else {",
      [
        12
      ]
    ],
    [
      "            var cache = [];",
      [
        13
      ]
    ],
    [
      "            for (var item in res) {",
      [
        14
      ]
    ],
    [
      "                for (var letter of s) {",
      [
        15
      ]
    ],
    [
      "                    cache.push(item + letter);",
      [
        16
      ]
    ],
    [
      "                }",
      null
    ],
    [
      "            }",
      null
    ],
    [
      "            res = cache;",
      [
        17
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    return res;",
      [
        18
      ]
    ],
    [
      "}",
      null
    ]
  ]
}