
### Python
### findMaxConsecutiveOnes 
from typing import *   # --- py stmt 1
def f_gold(nums: List[int]) -> int:   # --- py stmt 2
    n = len(nums)   # --- py stmt 3
    prefix = [0] * n   # --- py stmt 4
    suffix = [0] * n   # --- py stmt 5
    res = 0   # --- py stmt 6
    for i in range(n):   # --- py stmt 7
        if i == 0:   # --- py stmt 8
            prefix[i] = nums[i]   # --- py stmt 9
        else:   # --- py stmt 10
            prefix[i] = 0 if nums[i] == 0 else prefix[i - 1] + 1   # --- py stmt 11
        res = max(res, prefix[i])   # --- py stmt 12
    for i in range(n - 1, -1, -1):   # --- py stmt 13
        if i == n - 1:   # --- py stmt 14
            suffix[i] = nums[i]   # --- py stmt 15
        else:   # --- py stmt 16
            suffix[i] = 0 if nums[i] == 0 else suffix[i + 1] + 1   # --- py stmt 17
    for i in range(n):   # --- py stmt 18
        if nums[i] == 0:   # --- py stmt 19
            t = 1   # --- py stmt 20
            if i > 0:   # --- py stmt 21
                t += prefix[i - 1]   # --- py stmt 22
            if i < n - 1:   # --- py stmt 23
                t += suffix[i + 1]   # --- py stmt 24
            res = max(res, t)   # --- py stmt 25
    return res   # --- py stmt 26

### JavaScript
"use strict";
function f_gold(nums) {   // --- py stmt 2
    let n = nums.length;   // --- py stmt 3
    let prefix = Array(n).fill(0);   // --- py stmt 4
    let suffix = Array(n).fill(0);   // --- py stmt 5
    let res = 0;   // --- py stmt 6
    for (let i = 0; i < n; i++) {   // --- py stmt 7
        if (i == 0) {   // --- py stmt 8
            prefix[i] = nums[i];   // --- py stmt 9
        }
        else {   // --- py stmt 10
            prefix[i] = 0;   // --- py stmt 11
            if (nums[i] == 0) {   // --- py stmt 11
                prefix[i] = prefix[i - 1] + 1;   // --- py stmt 11
            }
        }
        res = Math.max(res, prefix[i]);   // --- py stmt 12
    }
    for (let i = n - 1; i >= 0; i--) {   // --- py stmt 13
        if (i == n - 1) {   // --- py stmt 14
            suffix[i] = nums[i];   // --- py stmt 15
        }
        else {   // --- py stmt 16
            if (nums[i] == 0) {   // --- py stmt 17
                suffix[i] = 0;   // --- py stmt 17
            } 
            else suffix[i] = suffix[i + 1] + 1;   // --- py stmt 17
        }
    }
    for (let i = 0; i < n; i++) {   // --- py stmt 18
        if (nums[i] == 0) {   // --- py stmt 19
            let t = 1;   // --- py stmt 20
            if (i > 0) {   // --- py stmt 21
                t += prefix[i - 1];   // --- py stmt 22
            }
            if (i < n - 1) {   // --- py stmt 23
                t += suffix[i + 1];   // --- py stmt 24
            }
            res = Math.max(res, t);   // --- py stmt 25
        }
    }
    return res;   // --- py stmt 26
}



