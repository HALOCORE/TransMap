{
  "src_anno_stmts": [
    [
      "### getMaximumXor",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(nums: List[int], maximumBit: int) -> List[int]:",
      [
        2
      ]
    ],
    [
      "    n = len(nums)",
      [
        3
      ]
    ],
    [
      "    s = [0] * (n + 1)",
      [
        4
      ]
    ],
    [
      "    for i, x in enumerate(nums):",
      [
        5
      ]
    ],
    [
      "        s[i + 1] = s[i] ^ x",
      [
        6
      ]
    ],
    [
      "    ans = []",
      [
        7
      ]
    ],
    [
      "    for x in s[:0:-1]:",
      [
        8
      ]
    ],
    [
      "        t = 0",
      [
        9
      ]
    ],
    [
      "        for i in range(maximumBit):",
      [
        10
      ]
    ],
    [
      "            if ((x >> i) & 1) == 0:",
      [
        11
      ]
    ],
    [
      "                t |= 1 << i",
      [
        12
      ]
    ],
    [
      "        ans.append(t)",
      [
        13
      ]
    ],
    [
      "    return ans",
      [
        14
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "const f_gold = (nums, maximumBit) => {",
      [
        2
      ]
    ],
    [
      "    let n = nums.length;",
      [
        3
      ]
    ],
    [
      "    let s = new Array(n + 1).fill(0);",
      [
        4
      ]
    ],
    [
      "    for (let i = 0; i < nums.length; i++) {",
      [
        5
      ]
    ],
    [
      "        s[i + 1] = s[i] ^ nums[i];",
      [
        6
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    let ans = [];",
      [
        7
      ]
    ],
    [
      "    for (let x of s.slice(0, 0).reverse()) {",
      [
        8
      ]
    ],
    [
      "        let t = 0;",
      [
        9
      ]
    ],
    [
      "        for (let i = 0; i < maximumBit; i++) {",
      [
        10
      ]
    ],
    [
      "            if (((x >> i) & 1) == 0) {",
      [
        11
      ]
    ],
    [
      "                t |= 1 << i;",
      [
        12
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "        }",
      null
    ],
    [
      "        ans.push(t);",
      [
        13
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    return ans;",
      [
        14
      ]
    ],
    [
      "}",
      null
    ]
  ]
}