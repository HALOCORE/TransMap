
### Python
### swimInWater 
from typing import *   # --- py stmt 1
def f_gold(grid: List[List[int]]) -> int:   # --- py stmt 2
    def find(x):   # --- py stmt 3
        if p[x] != x:   # --- py stmt 4
            p[x] = find(p[x])   # --- py stmt 5
        return p[x]   # --- py stmt 6
    n = len(grid)   # --- py stmt 7
    p = list(range(n * n))   # --- py stmt 8
    hi = [0] * (n * n)   # --- py stmt 9
    for i, row in enumerate(grid):   # --- py stmt 10
        for j, h in enumerate(row):   # --- py stmt 11
            hi[h] = i * n + j   # --- py stmt 12
    for t in range(n * n):   # --- py stmt 13
        i, j = hi[t] // n, hi[t] % n   # --- py stmt 14
        for a, b in [(0, -1), (0, 1), (1, 0), (-1, 0)]:   # --- py stmt 15
            x, y = i + a, j + b   # --- py stmt 16
            if 0 <= x < n and 0 <= y < n and grid[x][y] <= t:   # --- py stmt 17
                p[find(x * n + y)] = find(hi[t])   # --- py stmt 18
            if find(0) == find(n * n - 1):   # --- py stmt 19
                return t   # --- py stmt 20
    return -1   # --- py stmt 21

### JavaScript
"use strict";

function f_gold(grid) {   // --- py stmt 2
    function find(x) {   // --- py stmt 3
        if (p[x] != x) {   // --- py stmt 4
            p[x] = find(p[x]);   // --- py stmt 5
        }
        return p[x];   // --- py stmt 6
    }
    var n = grid.length;   // --- py stmt 7
    var p = Array.from(Array(n * n).keys());   // --- py stmt 8
    var hi = Array(n * n).fill(0);   // --- py stmt 9
    for (var i = 0; i < grid.length; i++) {   // --- py stmt 10
        for (var j = 0; j < grid[i].length; j++) {   // --- py stmt 11
            hi[grid[i][j]] = i * n + j;   // --- py stmt 12
        }
    }
    for (var t = 0; t < n * n; t++) {   // --- py stmt 13
        var i = Math.floor(hi[t] / n);   // --- py stmt 14
        var j = hi[t] % n;   // --- py stmt 14
        for (var a = 0; a < 2; a++) {   // --- py stmt 15
            for (var b = -1; b < 2; b++) {   // --- py stmt 15
                if (a == 0 && b == 0) {   // --- py stmt 15
                    continue;   // --- py stmt 15
                }
                var x = i + a;   // --- py stmt 16
                var y = j + b;   // --- py stmt 16
                if (0 <= x && x < n && 0 <= y && y < n && grid[x][y] <= t) {   // --- py stmt 17
                    p[find(x * n + y)] = find(hi[t]);   // --- py stmt 18
                }
                if (find(0) == find(n * n - 1)) {   // --- py stmt 19
                    return t;   // --- py stmt 20
                }
            }
        }
    }
    return -1;   // --- py stmt 21
}



