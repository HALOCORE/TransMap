{
  "src_anno_stmts": [
    [
      "### powerfulIntegers",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(x: int, y: int, bound: int) -> List[int]:",
      [
        2
      ]
    ],
    [
      "    s = set()",
      [
        3
      ]
    ],
    [
      "    i = 1",
      [
        4
      ]
    ],
    [
      "    while i < bound:",
      [
        5
      ]
    ],
    [
      "        j = 1",
      [
        6
      ]
    ],
    [
      "        while j < bound:",
      [
        7
      ]
    ],
    [
      "            if i + j <= bound:",
      [
        8
      ]
    ],
    [
      "                s.add(i + j)",
      [
        9
      ]
    ],
    [
      "            if y == 1:",
      [
        10
      ]
    ],
    [
      "                break",
      [
        11
      ]
    ],
    [
      "            j *= y",
      [
        12
      ]
    ],
    [
      "        if x == 1:",
      [
        13
      ]
    ],
    [
      "            break",
      [
        14
      ]
    ],
    [
      "        i *= x",
      [
        15
      ]
    ],
    [
      "    return list(s)",
      [
        16
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(x, y, bound) {",
      [
        2
      ]
    ],
    [
      "    var s = new Set();",
      [
        3
      ]
    ],
    [
      "    var i = 1;",
      [
        4
      ]
    ],
    [
      "    while (i < bound) {",
      [
        5
      ]
    ],
    [
      "        var j = 1;",
      [
        6
      ]
    ],
    [
      "        while (j < bound) {",
      [
        7
      ]
    ],
    [
      "            if (i + j <= bound) {",
      [
        8
      ]
    ],
    [
      "                s.add(i + j);",
      [
        9
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            if (y == 1) {",
      [
        10
      ]
    ],
    [
      "                break;",
      [
        11
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            j *= y;",
      [
        12
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        if (x == 1) {",
      [
        13
      ]
    ],
    [
      "            break;",
      [
        14
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        i *= x;",
      [
        15
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    return Array.from(s);",
      [
        16
      ]
    ],
    [
      "}",
      null
    ]
  ]
}