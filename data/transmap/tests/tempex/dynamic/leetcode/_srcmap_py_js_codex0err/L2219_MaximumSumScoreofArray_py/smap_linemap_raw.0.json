{
  "src_anno_stmts": [
    [
      "### maximumSumScore",
      null
    ],
    [
      "from itertools import accumulate",
      [
        1
      ]
    ],
    [
      "from typing import *",
      [
        2
      ]
    ],
    [
      "def f_gold(nums: List[int]) -> int:",
      [
        3
      ]
    ],
    [
      "    s = [0] + list(accumulate(nums))",
      [
        4
      ]
    ],
    [
      "    return max(max(s[i + 1], s[-1] - s[i]) for i in range(len(nums)))",
      [
        5
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(nums) {",
      [
        3
      ]
    ],
    [
      "    var s = [0].concat(nums.reduce(function (acc, val) { return acc.concat(acc[acc.length - 1] + val); }, []));",
      [
        4
      ]
    ],
    [
      "    return Math.max.apply(Math, s.slice(1).map(function (val, i) { return Math.max(val, s[s.length - 1] - s[i]); }));",
      [
        5
      ]
    ],
    [
      "}",
      null
    ]
  ]
}