{
  "src_anno_stmts": [
    [
      "### distinctSequences",
      null
    ],
    [
      "import math",
      [
        1
      ]
    ],
    [
      "from math import gcd",
      [
        2
      ]
    ],
    [
      "from typing import *",
      [
        3
      ]
    ],
    [
      "def f_gold(n: int) -> int:",
      [
        4
      ]
    ],
    [
      "    if n == 1:",
      [
        5
      ]
    ],
    [
      "        return 6",
      [
        6
      ]
    ],
    [
      "    mod = 10**9 + 7",
      [
        7
      ]
    ],
    [
      "    dp = [[[0] * 6 for _ in range(6)] for _ in range(n + 1)]",
      [
        8
      ]
    ],
    [
      "    for i in range(6):",
      [
        9
      ]
    ],
    [
      "        for j in range(6):",
      [
        10
      ]
    ],
    [
      "            if gcd(i + 1, j + 1) == 1 and i != j:",
      [
        11
      ]
    ],
    [
      "                dp[2][i][j] = 1",
      [
        12
      ]
    ],
    [
      "    for k in range(3, n + 1):",
      [
        13
      ]
    ],
    [
      "        for i in range(6):",
      [
        14
      ]
    ],
    [
      "            for j in range(6):",
      [
        15
      ]
    ],
    [
      "                if gcd(i + 1, j + 1) == 1 and i != j:",
      [
        16
      ]
    ],
    [
      "                    for h in range(6):",
      [
        17
      ]
    ],
    [
      "                        if gcd(h + 1, i + 1) == 1 and h != i and h != j:",
      [
        18
      ]
    ],
    [
      "                            dp[k][i][j] += dp[k - 1][h][i]",
      [
        19
      ]
    ],
    [
      "    ans = 0",
      [
        20
      ]
    ],
    [
      "    for i in range(6):",
      [
        21
      ]
    ],
    [
      "        for j in range(6):",
      [
        22
      ]
    ],
    [
      "            ans += dp[-1][i][j]",
      [
        23
      ]
    ],
    [
      "    return ans % mod",
      [
        24
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "exports.__esModule = true;",
      null
    ],
    [
      "exports.f_gold = function (n) {",
      [
        4
      ]
    ],
    [
      "    if (n == 1)",
      [
        5
      ]
    ],
    [
      "        return 6;",
      [
        6
      ]
    ],
    [
      "    var mod = Math.pow(10, 9) + 7;",
      [
        7
      ]
    ],
    [
      "    var dp = Array(n + 1);",
      [
        8
      ]
    ],
    [
      "    for (var i = 0; i < n + 1; i++) {",
      [
        9
      ]
    ],
    [
      "        dp[i] = Array(6);",
      [
        9
      ]
    ],
    [
      "        for (var j = 0; j < 6; j++) {",
      [
        10
      ]
    ],
    [
      "            dp[i][j] = Array(6).fill(0);",
      [
        10
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    for (var i = 0; i < 6; i++) {",
      [
        11
      ]
    ],
    [
      "        for (var j = 0; j < 6; j++) {",
      [
        11
      ]
    ],
    [
      "            if (gcd(i + 1, j + 1) == 1 && i != j)",
      [
        12
      ]
    ],
    [
      "                dp[2][i][j] = 1;",
      [
        12
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    for (var k = 3; k < n + 1; k++) {",
      [
        13
      ]
    ],
    [
      "        for (var i = 0; i < 6; i++) {",
      [
        14
      ]
    ],
    [
      "            for (var j = 0; j < 6; j++) {",
      [
        15
      ]
    ],
    [
      "                if (gcd(i + 1, j + 1) == 1 && i != j) {",
      [
        16
      ]
    ],
    [
      "                    for (var h = 0; h < 6; h++) {",
      [
        17
      ]
    ],
    [
      "                        if (gcd(h + 1, i + 1) == 1 && h != i && h != j)",
      [
        18
      ]
    ],
    [
      "                            dp[k][i][j] += dp[k - 1][h][i];",
      [
        19
      ]
    ],
    [
      "                    }",
      null
    ],
    [
      "                }",
      null
    ],
    [
      "            }",
      null
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    var ans = 0;",
      [
        20
      ]
    ],
    [
      "    for (var i = 0; i < 6; i++) {",
      [
        21
      ]
    ],
    [
      "        for (var j = 0; j < 6; j++) {",
      [
        22
      ]
    ],
    [
      "            ans += dp[n][i][j];",
      [
        23
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    return ans % mod;",
      [
        24
      ]
    ],
    [
      "};",
      null
    ],
    [
      "var gcd = function (a, b) {",
      [
        2
      ]
    ],
    [
      "    if (a == 0)",
      [
        2
      ]
    ],
    [
      "        return b;",
      [
        2
      ]
    ],
    [
      "    return gcd(b % a, a);",
      [
        2
      ]
    ],
    [
      "};",
      null
    ]
  ]
}