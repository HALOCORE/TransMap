{
  "src_anno_stmts": [
    [
      "### splitPainting",
      null
    ],
    [
      "from collections import defaultdict",
      [
        1
      ]
    ],
    [
      "from typing import *",
      [
        2
      ]
    ],
    [
      "def f_gold(segments: List[List[int]]) -> List[List[int]]:",
      [
        3
      ]
    ],
    [
      "    d = defaultdict(int)",
      [
        4
      ]
    ],
    [
      "    for l, r, c in segments:",
      [
        5
      ]
    ],
    [
      "        d[l] += c",
      [
        6
      ]
    ],
    [
      "        d[r] -= c",
      [
        7
      ]
    ],
    [
      "    s = sorted([[k, v] for k, v in d.items()])",
      [
        8
      ]
    ],
    [
      "    n = len(s)",
      [
        9
      ]
    ],
    [
      "    for i in range(1, n):",
      [
        10
      ]
    ],
    [
      "        s[i][1] += s[i - 1][1]",
      [
        11
      ]
    ],
    [
      "    return [[s[i][0], s[i + 1][0], s[i][1]] for i in range(n - 1) if s[i][1]]",
      [
        12
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(segments) {",
      [
        3
      ]
    ],
    [
      "    var d = {};",
      [
        4
      ]
    ],
    [
      "    for (var i = 0; i < segments.length; i++) {",
      [
        5
      ]
    ],
    [
      "        if (!(segments[i][0] in d)) d[segments[i][0]] = 0; d[segments[i][0]] += segments[i][2];",
      [
        6
      ]
    ],
    [
      "        if (!(segments[i][1] in d)) d[segments[i][1]] = 0; d[segments[i][1]] -= segments[i][2];",
      [
        7
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    var s = [];",
      [
        8
      ]
    ],
    [
      "    for (var key in d) {",
      [
        8
      ]
    ],
    [
      "        s.push([key, d[key]]);",
      [
        8
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    s.sort(function (a, b) {",
      [
        8
      ]
    ],
    [
      "        return a[0] == b[0] ? a[1] - b[1] : a[0] - b[0];",
      [
        8
      ]
    ],
    [
      "    });",
      null
    ],
    [
      "    var n = s.length;",
      [
        9
      ]
    ],
    [
      "    for (var i = 1; i < n; i++) {",
      [
        10
      ]
    ],
    [
      "        s[i][1] += s[i - 1][1];",
      [
        11
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    var res = [];",
      [
        12
      ]
    ],
    [
      "    for (var i = 0; i < n - 1; i++) {",
      [
        12
      ]
    ],
    [
      "        if (s[i][1]) {",
      [
        12
      ]
    ],
    [
      "            res.push([s[i][0], s[i + 1][0], s[i][1]]);",
      [
        12
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    return res;",
      [
        12
      ]
    ],
    [
      "}",
      null
    ]
  ]
}