{
  "src_anno_stmts": [
    [
      "### shortestWordDistance",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(wordsDict: List[str], word1: str, word2: str) -> int:",
      [
        2
      ]
    ],
    [
      "    i1 = i2 = -1",
      [
        3
      ]
    ],
    [
      "    shortest_distance = len(wordsDict)",
      [
        4
      ]
    ],
    [
      "    same = word1 == word2",
      [
        5
      ]
    ],
    [
      "    for i in range(len(wordsDict)):",
      [
        6
      ]
    ],
    [
      "        if same:",
      [
        7
      ]
    ],
    [
      "            if word1 == wordsDict[i]:",
      [
        8
      ]
    ],
    [
      "                if i1 != -1:",
      [
        9
      ]
    ],
    [
      "                    shortest_distance = min(shortest_distance, i - i1)",
      [
        10
      ]
    ],
    [
      "                i1 = i",
      [
        11
      ]
    ],
    [
      "        else:",
      [
        12
      ]
    ],
    [
      "            if word1 == wordsDict[i]:",
      [
        13
      ]
    ],
    [
      "                i1 = i",
      [
        14
      ]
    ],
    [
      "            if word2 == wordsDict[i]:",
      [
        15
      ]
    ],
    [
      "                i2 = i",
      [
        16
      ]
    ],
    [
      "            if i1 != -1 and i2 != -1:",
      [
        17
      ]
    ],
    [
      "                shortest_distance = min(shortest_distance, abs(i1 - i2))",
      [
        18
      ]
    ],
    [
      "    return shortest_distance",
      [
        19
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(wordsDict, word1, word2) {",
      [
        2
      ]
    ],
    [
      "    var i1 = i2 = -1;",
      [
        3
      ]
    ],
    [
      "    var shortest_distance = wordsDict.length;",
      [
        4
      ]
    ],
    [
      "    var same = word1 == word2;",
      [
        5
      ]
    ],
    [
      "    for (var i = 0; i < wordsDict.length; i++) {",
      [
        6
      ]
    ],
    [
      "        if (same) {",
      [
        7
      ]
    ],
    [
      "            if (word1 == wordsDict[i]) {",
      [
        8
      ]
    ],
    [
      "                if (i1 != -1) {",
      [
        9
      ]
    ],
    [
      "                    shortest_distance = Math.min(shortest_distance, i - i1);",
      [
        10
      ]
    ],
    [
      "                }",
      null
    ],
    [
      "                i1 = i;",
      [
        11
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "        } else {",
      [
        12
      ]
    ],
    [
      "            if (word1 == wordsDict[i]) {",
      [
        13
      ]
    ],
    [
      "                i1 = i;",
      [
        14
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            if (word2 == wordsDict[i]) {",
      [
        15
      ]
    ],
    [
      "                i2 = i;",
      [
        16
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            if (i1 != -1 && i2 != -1) {",
      [
        17
      ]
    ],
    [
      "                shortest_distance = Math.min(shortest_distance, Math.abs(i1 - i2));",
      [
        18
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    return shortest_distance;",
      [
        19
      ]
    ],
    [
      "}",
      null
    ]
  ]
}