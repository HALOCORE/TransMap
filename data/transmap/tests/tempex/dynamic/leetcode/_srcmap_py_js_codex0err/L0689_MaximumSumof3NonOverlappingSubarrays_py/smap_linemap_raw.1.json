{
  "src_anno_stmts": [
    [
      "### maxSumOfThreeSubarrays",
      null
    ],
    [
      "from typing import *",
      [
        1
      ]
    ],
    [
      "def f_gold(nums: List[int], k: int) -> List[int]:",
      [
        2
      ]
    ],
    [
      "    s = s1 = s2 = s3 = 0",
      [
        3
      ]
    ],
    [
      "    mx1 = mx12 = 0",
      [
        4
      ]
    ],
    [
      "    idx1, idx12 = 0, ()",
      [
        5
      ]
    ],
    [
      "    ans = []",
      [
        6
      ]
    ],
    [
      "    for i in range(k * 2, len(nums)):",
      [
        7
      ]
    ],
    [
      "        s1 += nums[i - k * 2]",
      [
        8
      ]
    ],
    [
      "        s2 += nums[i - k]",
      [
        9
      ]
    ],
    [
      "        s3 += nums[i]",
      [
        10
      ]
    ],
    [
      "        if i >= k * 3 - 1:",
      [
        11
      ]
    ],
    [
      "            if s1 > mx1:",
      [
        12
      ]
    ],
    [
      "                mx1 = s1",
      [
        13
      ]
    ],
    [
      "                idx1 = i - k * 3 + 1",
      [
        14
      ]
    ],
    [
      "            if mx1 + s2 > mx12:",
      [
        15
      ]
    ],
    [
      "                mx12 = mx1 + s2",
      [
        16
      ]
    ],
    [
      "                idx12 = (idx1, i - k * 2 + 1)",
      [
        17
      ]
    ],
    [
      "            if mx12 + s3 > s:",
      [
        18
      ]
    ],
    [
      "                s = mx12 + s3",
      [
        19
      ]
    ],
    [
      "                ans = [*idx12, i - k + 1]",
      [
        20
      ]
    ],
    [
      "            s1 -= nums[i - k * 3 + 1]",
      [
        21
      ]
    ],
    [
      "            s2 -= nums[i - k * 2 + 1]",
      [
        22
      ]
    ],
    [
      "            s3 -= nums[i - k + 1]",
      [
        23
      ]
    ],
    [
      "    return ans",
      [
        24
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(nums, k) {",
      [
        2
      ]
    ],
    [
      "    var s = 0, s1 = 0, s2 = 0, s3 = 0;",
      [
        3
      ]
    ],
    [
      "    var mx1 = mx12 = 0;",
      [
        4
      ]
    ],
    [
      "    var idx1 = 0, idx12 = 0;",
      [
        5
      ]
    ],
    [
      "    var ans = [];",
      [
        6
      ]
    ],
    [
      "    for (var i = k * 2; i < nums.length; i++) {",
      [
        7
      ]
    ],
    [
      "        s1 += nums[i - k * 2];",
      [
        8
      ]
    ],
    [
      "        s2 += nums[i - k];",
      [
        9
      ]
    ],
    [
      "        s3 += nums[i];",
      [
        10
      ]
    ],
    [
      "        if (i >= k * 3 - 1) {",
      [
        11
      ]
    ],
    [
      "            if (s1 > mx1) {",
      [
        12
      ]
    ],
    [
      "                mx1 = s1;",
      [
        13
      ]
    ],
    [
      "                idx1 = i - k * 3 + 1;",
      [
        14
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            if (mx1 + s2 > mx12) {",
      [
        15
      ]
    ],
    [
      "                mx12 = mx1 + s2;",
      [
        16
      ]
    ],
    [
      "                idx12 = [idx1, i - k * 2 + 1];",
      [
        17
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            if (mx12 + s3 > s) {",
      [
        18
      ]
    ],
    [
      "                s = mx12 + s3;",
      [
        19
      ]
    ],
    [
      "                ans = [...idx12, i - k + 1];",
      [
        20
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "            s1 -= nums[i - k * 3 + 1];",
      [
        21
      ]
    ],
    [
      "            s2 -= nums[i - k * 2 + 1];",
      [
        22
      ]
    ],
    [
      "            s3 -= nums[i - k + 1];",
      [
        23
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    return ans;",
      [
        24
      ]
    ],
    [
      "}",
      null
    ]
  ]
}