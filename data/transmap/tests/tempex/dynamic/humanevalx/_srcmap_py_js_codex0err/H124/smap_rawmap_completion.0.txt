
### Python
def valid_date(date):   # --- py stmt 1
    try:   # --- py stmt 2
        date = date.strip()   # --- py stmt 3
        month, day, year = date.split('-')   # --- py stmt 4
        month, day, year = int(month), int(day), int(year)   # --- py stmt 5
        if month < 1 or month > 12:   # --- py stmt 6
            return False   # --- py stmt 7
        if month in [1,3,5,7,8,10,12] and day < 1 or day > 31:   # --- py stmt 8
            return False   # --- py stmt 9
        if month in [4,6,9,11] and day < 1 or day > 30:   # --- py stmt 10
            return False   # --- py stmt 11
        if month == 2 and day < 1 or day > 29:   # --- py stmt 12
            return False   # --- py stmt 13
    except:   # --- py stmt 14
        return False   # --- py stmt 15

    return True   # --- py stmt 16

### JavaScript
"use strict";

function valid_date(date) {   // --- py stmt 1
    try {   // --- py stmt 2
        date = date.trim();   // --- py stmt 3
        let [month, day, year] = date.split('-');   // --- py stmt 4
        month = parseInt(month);   // --- py stmt 5
        day = parseInt(day);   // --- py stmt 5
        year = parseInt(year);   // --- py stmt 5
        if (month < 1 || month > 12) {   // --- py stmt 6
            return false;   // --- py stmt 7
        }
        if ([1,3,5,7,8,10,12].includes(month) && (day < 1 || day > 31)) {   // --- py stmt 8
            return false;   // --- py stmt 9
        }
        if ([4,6,9,11].includes(month) && (day < 1 || day > 30)) {   // --- py stmt 10
            return false;   // --- py stmt 11
        }
        if (month == 2 && (day < 1 || day > 29)) {   // --- py stmt 12
            return false;   // --- py stmt 13
        }
    } catch(err) {   // --- py stmt 14
        return false;   // --- py stmt 15
    }

    return true;   // --- py stmt 16
}



