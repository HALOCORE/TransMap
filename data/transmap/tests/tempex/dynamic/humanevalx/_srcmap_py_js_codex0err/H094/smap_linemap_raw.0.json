{
  "src_anno_stmts": [
    [
      "def skjkasdkd(lst):",
      [
        1
      ]
    ],
    [
      "    def isPrime(n):",
      [
        2
      ]
    ],
    [
      "        for i in range(2,int(n**0.5)+1):",
      [
        3
      ]
    ],
    [
      "            if n%i==0:",
      [
        4
      ]
    ],
    [
      "                return False",
      [
        5
      ]
    ],
    [
      "        return True",
      [
        6
      ]
    ],
    [
      "    maxx = 0",
      [
        7
      ]
    ],
    [
      "    i = 0",
      [
        8
      ]
    ],
    [
      "    while i < len(lst):",
      [
        9
      ]
    ],
    [
      "        if(lst[i] > maxx and isPrime(lst[i])):",
      [
        10
      ]
    ],
    [
      "            maxx = lst[i]",
      [
        11
      ]
    ],
    [
      "        i+=1",
      [
        12
      ]
    ],
    [
      "    result = sum(int(digit) for digit in str(maxx))",
      [
        13
      ]
    ],
    [
      "    return result",
      [
        14
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function skjkasdkd(lst) {",
      [
        1
      ]
    ],
    [
      "    function isPrime(n) {",
      [
        2
      ]
    ],
    [
      "        for (var i = 2; i <= Math.sqrt(n); i++) {",
      [
        3
      ]
    ],
    [
      "            if (n % i == 0) {",
      [
        4
      ]
    ],
    [
      "                return false;",
      [
        5
      ]
    ],
    [
      "            }",
      null
    ],
    [
      "        }",
      null
    ],
    [
      "        return true;",
      [
        6
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    var maxx = 0;",
      [
        7
      ]
    ],
    [
      "    var i = 0;",
      [
        8
      ]
    ],
    [
      "    while (i < lst.length) {",
      [
        9
      ]
    ],
    [
      "        if (lst[i] > maxx && isPrime(lst[i])) {",
      [
        10
      ]
    ],
    [
      "            maxx = lst[i];",
      [
        11
      ]
    ],
    [
      "        }",
      null
    ],
    [
      "        i++;",
      [
        12
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    var result = maxx.toString().split(\"\").reduce(function (a, b) { return parseInt(a) + parseInt(b); });",
      [
        13
      ]
    ],
    [
      "    return result;",
      [
        14
      ]
    ],
    [
      "}",
      null
    ]
  ]
}