{
  "src_anno_stmts": [
    [
      "def f_gold(arr, n):",
      [
        1
      ]
    ],
    [
      "  if(n == 1): return True",
      [
        2
      ]
    ],
    [
      "  i = 1",
      [
        3
      ]
    ],
    [
      "  for i in range(1, n):",
      [
        4
      ]
    ],
    [
      "    if arr[i - 1] < arr[i]:",
      [
        5
      ]
    ],
    [
      "      if(i == n): return True",
      [
        6
      ]
    ],
    [
      "  j = i",
      [
        7
      ]
    ],
    [
      "  while(arr[j] < arr[j - 1]):",
      [
        8
      ]
    ],
    [
      "    if(i > 1 and arr[j] < arr[i - 2]): return False",
      [
        9
      ]
    ],
    [
      "    j += 1",
      [
        10
      ]
    ],
    [
      "  if(j == n): return True",
      [
        11
      ]
    ],
    [
      "  k = j",
      [
        12
      ]
    ],
    [
      "  if(arr[k] < arr[i - 1]): return False",
      [
        13
      ]
    ],
    [
      "  while(k > 1 and k < n):",
      [
        14
      ]
    ],
    [
      "    if(arr[k] < arr[k - 1]): return False",
      [
        15
      ]
    ],
    [
      "    k += 1",
      [
        16
      ]
    ],
    [
      "  return True",
      [
        17
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(arr, n) {",
      [
        1
      ]
    ],
    [
      "  if(n == 1) return true;",
      [
        2
      ]
    ],
    [
      "  var i = 1;",
      [
        3
      ]
    ],
    [
      "  for(i = 1; i < n; i++) {",
      [
        4
      ]
    ],
    [
      "    if(arr[i - 1] < arr[i]) {",
      [
        5
      ]
    ],
    [
      "      if(i == n) return true;",
      [
        6
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "  }",
      null
    ],
    [
      "  var j = i;",
      [
        7
      ]
    ],
    [
      "  while(arr[j] < arr[j - 1]) {",
      [
        8
      ]
    ],
    [
      "    if(i > 1 && arr[j] < arr[i - 2]) return false;",
      [
        9
      ]
    ],
    [
      "    j += 1;",
      [
        10
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  if(j == n) return true;",
      [
        11
      ]
    ],
    [
      "  var k = j;",
      [
        12
      ]
    ],
    [
      "  if(arr[k] < arr[i - 1]) return false;",
      [
        13
      ]
    ],
    [
      "  while(k > 1 && k < n) {",
      [
        14
      ]
    ],
    [
      "    if(arr[k] < arr[k - 1]) return false;",
      [
        15
      ]
    ],
    [
      "    k += 1;",
      [
        16
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  return true;",
      [
        17
      ]
    ],
    [
      "}",
      null
    ]
  ]
}