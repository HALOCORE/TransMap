
### Python
def f_gold(n):   # --- py stmt 1
  dp =[[0 for x in range(10)] for y in range(n + 1)] ;   # --- py stmt 2
  if(n == 1): return 10 ;   # --- py stmt 3
  for j in range(10): dp[1][j] = 1 ;   # --- py stmt 4
  for i in range(2, n + 1):   # --- py stmt 5
    for j in range(10):   # --- py stmt 6
      if(j == 0): dp[i][j] = dp[i - 1][j + 1] ;   # --- py stmt 7
      elif(j == 9): dp[i][j] = dp[i - 1][j - 1] ;   # --- py stmt 8
      else: dp[i][j] =(dp[i - 1][j - 1] + dp[i - 1][j + 1]);   # --- py stmt 9
  sum = 0 ;   # --- py stmt 10
  for j in range(1, 10): sum = sum + dp[n][j] ;   # --- py stmt 11
  return sum ;   # --- py stmt 12

### JavaScript
"use strict";
function f_gold(n) {   // --- py stmt 1
  var dp = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];   // --- py stmt 2
  if (n == 1) return 10;   // --- py stmt 3
  for (var j = 0; j < 10; j++) dp[1][j] = 1;   // --- py stmt 4
  for (var i = 2; i < n + 1; i++) {   // --- py stmt 5
    for (var j = 0; j < 10; j++) {   // --- py stmt 6
      if (j == 0) dp[i][j] = dp[i - 1][j + 1];   // --- py stmt 7
      else if (j == 9) dp[i][j] = dp[i - 1][j - 1];   // --- py stmt 8
      else dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j + 1];   // --- py stmt 9
    }
  }
  var sum = 0;   // --- py stmt 10
  for (var j = 1; j < 10; j++) sum = sum + dp[n][j];   // --- py stmt 11
  return sum;   // --- py stmt 12
}



