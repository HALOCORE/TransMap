
### Python
def f_gold(S, T):   # --- py stmt 1
  m = len(T)   # --- py stmt 2
  n = len(S)   # --- py stmt 3
  if m > n: return 0   # --- py stmt 4
  mat =[[0 for _ in range(n + 1)] for __ in range(m + 1)]   # --- py stmt 5
  for i in range(1, m + 1): mat[i][0] = 0   # --- py stmt 6
  for j in range(n + 1): mat[0][j] = 1   # --- py stmt 7
  for i in range(1, m + 1):   # --- py stmt 8
    for j in range(1, n + 1):   # --- py stmt 9
      if T[i - 1] != S[j - 1]: mat[i][j] = mat[i][j - 1]   # --- py stmt 10
      else: mat[i][j] =(mat[i][j - 1] + mat[i - 1][j - 1])   # --- py stmt 11
  return mat[m][n]   # --- py stmt 12

### JavaScript
"use strict";
function f_gold(S, T) {   // --- py stmt 1
  var m = T.length;   // --- py stmt 2
  var n = S.length;   // --- py stmt 3
  if (m > n) return 0;   // --- py stmt 4
  var mat = [[0], [0]];   // --- py stmt 5
  for (var i = 1; i < m + 1; i++) mat[i][0] = 0;   // --- py stmt 6
  for (var j = 0; j < n + 1; j++) mat[0][j] = 1;   // --- py stmt 7
  for (var i = 1; i < m + 1; i++) {   // --- py stmt 8
    for (var j = 1; j < n + 1; j++) {   // --- py stmt 9
      if (T[i - 1] != S[j - 1]) mat[i][j] = mat[i][j - 1];   // --- py stmt 10
      else mat[i][j] = mat[i][j - 1] + mat[i - 1][j - 1];   // --- py stmt 11
    }
  }
  return mat[m][n];   // --- py stmt 12
}

