{
  "src_anno_stmts": [
    [
      "def f_gold(str):",
      [
        1
      ]
    ],
    [
      "  n = len(str)",
      [
        2
      ]
    ],
    [
      "  dp =[[0] *(n + 1)] *(n + 1)",
      [
        3
      ]
    ],
    [
      "  for i in range(1, n + 1):",
      [
        4
      ]
    ],
    [
      "    for j in range(1, n + 1):",
      [
        5
      ]
    ],
    [
      "      if(str[i - 1] == str[j - 1] and i != j): dp[i][j] = 1 + dp[i - 1][j - 1]",
      [
        6
      ]
    ],
    [
      "      else: dp[i][j] = max(dp[i][j - 1], dp[i - 1][j])",
      [
        7
      ]
    ],
    [
      "  return dp[n][n]",
      [
        8
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(str) {",
      [
        1
      ]
    ],
    [
      "  var n = str.length;",
      [
        2
      ]
    ],
    [
      "  var dp = [[0] * (n + 1)] * (n + 1);",
      [
        3
      ]
    ],
    [
      "  for (var i = 1; i < n + 1; i++) {",
      [
        4
      ]
    ],
    [
      "    for (var j = 1; j < n + 1; j++) {",
      [
        5
      ]
    ],
    [
      "      if (str[i - 1] == str[j - 1] && i != j) dp[i][j] = 1 + dp[i - 1][j - 1];",
      [
        6
      ]
    ],
    [
      "      else dp[i][j] = Math.max(dp[i][j - 1], dp[i - 1][j]);",
      [
        7
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "  }",
      null
    ],
    [
      "  return dp[n][n];",
      [
        8
      ]
    ],
    [
      "}",
      null
    ]
  ]
}