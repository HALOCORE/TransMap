
### Python
def f_gold(mat, r, c):   # --- py stmt 1
  a = 0   # --- py stmt 2
  b = 2   # --- py stmt 3
  low_row = 0 if(0 > a)else a   # --- py stmt 4
  low_column = 0 if(0 > b)else b - 1   # --- py stmt 5
  high_row = r - 1 if((a + 1)>= r)else a + 1   # --- py stmt 6
  high_column = c - 1 if((b + 1)>= c)else b + 1   # --- py stmt 7
  while((low_row > 0 - r and low_column > 0 - c)):   # --- py stmt 8
    i = low_column + 1   # --- py stmt 9
    while(i <= high_column and i < c and low_row >= 0):   # --- py stmt 10
      print(mat[low_row][i], end = " ")   # --- py stmt 11
      i += 1   # --- py stmt 12
    low_row -= 1   # --- py stmt 13
    i = low_row + 2   # --- py stmt 14
    while(i <= high_row and i < r and high_column < c):   # --- py stmt 15
      print(mat[i][high_column], end = " ")   # --- py stmt 16
      i += 1   # --- py stmt 17
    high_column += 1   # --- py stmt 18
    i = high_column - 2   # --- py stmt 19
    while(i >= low_column and i >= 0 and high_row < r):   # --- py stmt 20
      print(mat[high_row][i], end = " ")   # --- py stmt 21
      i -= 1   # --- py stmt 22
    high_row += 1   # --- py stmt 23
    i = high_row - 2   # --- py stmt 24
    while(i > low_row and i >= 0 and low_column >= 0):   # --- py stmt 25
      print(mat[i][low_column], end = " ")   # --- py stmt 26
      i -= 1   # --- py stmt 27
    low_column -= 1   # --- py stmt 28
  print()   # --- py stmt 29

### JavaScript
"use strict";
function f_gold(mat, r, c) {   // --- py stmt 1
  var a = 0;   // --- py stmt 2
  var b = 2;   // --- py stmt 3
  var low_row = 0 > a ? 0 : a;   // --- py stmt 4
  var low_column = 0 > b ? 0 : b - 1;   // --- py stmt 5
  var high_row = r - 1 >= (a + 1) ? a + 1 : r - 1;   // --- py stmt 6
  var high_column = c - 1 >= (b + 1) ? b + 1 : c - 1;   // --- py stmt 7
  while(low_row > 0 - r && low_column > 0 - c) {   // --- py stmt 8
    var i = low_column + 1;   // --- py stmt 9
    while(i <= high_column && i < c && low_row >= 0) {   // --- py stmt 10
      console.log(mat[low_row][i]);   // --- py stmt 11
      i += 1;   // --- py stmt 12
    }
    low_row -= 1;   // --- py stmt 13
    i = low_row + 2;   // --- py stmt 14
    while(i <= high_row && i < r && high_column < c) {   // --- py stmt 15
      console.log(mat[(i+mat.length)%mat.length][(high_column+mat[0].length)%mat[0].length]);   // --- py stmt 16
      i += 1;   // --- py stmt 17
    }
    high_column += 1;   // --- py stmt 18
    i = high_column - 2;   // --- py stmt 19
    while(i >= low_column && i >= 0 && high_row < r) {   // --- py stmt 20
      console.log(mat[high_row][i]);   // --- py stmt 21
      i -= 1;   // --- py stmt 22
    }
    high_row += 1;   // --- py stmt 23
    i = high_row - 2;   // --- py stmt 24
    while(i > low_row && i >= 0 && low_column >= 0) {   // --- py stmt 25
      console.log(mat[i][low_column], end = " ");   // --- py stmt 26
      i -= 1;   // --- py stmt 27
    }
    low_column -= 1;   // --- py stmt 28
  }
  console.log();   // --- py stmt 29
}



