{
  "src_anno_stmts": [
    [
      "def f_gold(m, n, x):",
      [
        1
      ]
    ],
    [
      "  table =[[0] *(x + 1)for i in range(n + 1)]",
      [
        2
      ]
    ],
    [
      "  for j in range(1, min(m + 1, x + 1)): table[1][j] = 1",
      [
        3
      ]
    ],
    [
      "  for i in range(2, n + 1):",
      [
        4
      ]
    ],
    [
      "    for j in range(1, x + 1):",
      [
        5
      ]
    ],
    [
      "      for k in range(1, min(m + 1, j)): table[i][j] += table[i - 1][j - k]",
      [
        6
      ]
    ],
    [
      "  return table[- 1][- 1]",
      [
        7
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(m, n, x) {",
      [
        1
      ]
    ],
    [
      "  let table = [[0] * (x + 1)];",
      [
        2
      ]
    ],
    [
      "  for (let i = 0; i < n + 1; i++) {",
      [
        2
      ]
    ],
    [
      "    table[i] = [0] * (x + 1);",
      [
        2
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  for (let j = 1; j < Math.min(m + 1, x + 1); j++) {",
      [
        3
      ]
    ],
    [
      "    table[1][j] = 1;",
      [
        3
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  for (let i = 2; i < n + 1; i++) {",
      [
        4
      ]
    ],
    [
      "    for (let j = 1; j < x + 1; j++) {",
      [
        5
      ]
    ],
    [
      "      for (let k = 1; k < Math.min(m + 1, j); k++) {",
      [
        6
      ]
    ],
    [
      "        table[i][j] += table[i - 1][j - k];",
      [
        6
      ]
    ],
    [
      "      }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "  }",
      null
    ],
    [
      "  return table[n][x];",
      [
        7
      ]
    ],
    [
      "}",
      null
    ]
  ]
}