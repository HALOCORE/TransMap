{
  "src_anno_stmts": [
    [
      "def f_gold(arr1, arr2, m, n, k):",
      [
        1
      ]
    ],
    [
      "  sorted1 =[0] *(m + n)",
      [
        2
      ]
    ],
    [
      "  i = 0",
      [
        3
      ]
    ],
    [
      "  j = 0",
      [
        4
      ]
    ],
    [
      "  d = 0",
      [
        5
      ]
    ],
    [
      "  while(i < m and j < n):",
      [
        6
      ]
    ],
    [
      "    if(arr1[i] < arr2[j]):",
      [
        7
      ]
    ],
    [
      "      sorted1[d] = arr1[i]",
      [
        8
      ]
    ],
    [
      "      i += 1",
      [
        9
      ]
    ],
    [
      "    else:",
      [
        10
      ]
    ],
    [
      "      sorted1[d] = arr2[j]",
      [
        11
      ]
    ],
    [
      "      j += 1",
      [
        12
      ]
    ],
    [
      "    d += 1",
      [
        13
      ]
    ],
    [
      "  while(i < m):",
      [
        14
      ]
    ],
    [
      "    sorted1[d] = arr1[i]",
      [
        15
      ]
    ],
    [
      "    d += 1",
      [
        16
      ]
    ],
    [
      "    i += 1",
      [
        17
      ]
    ],
    [
      "  while(j < n):",
      [
        18
      ]
    ],
    [
      "    sorted1[d] = arr2[j]",
      [
        19
      ]
    ],
    [
      "    d += 1",
      [
        20
      ]
    ],
    [
      "    j += 1",
      [
        21
      ]
    ],
    [
      "  return sorted1[k - 1]",
      [
        22
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(arr1, arr2, m, n, k) {",
      [
        1
      ]
    ],
    [
      "  var sorted1 = [0] * (m + n);",
      [
        2
      ]
    ],
    [
      "  var i = 0;",
      [
        3
      ]
    ],
    [
      "  var j = 0;",
      [
        4
      ]
    ],
    [
      "  var d = 0;",
      [
        5
      ]
    ],
    [
      "  while (i < m && j < n) {",
      [
        6
      ]
    ],
    [
      "    if (arr1[i] < arr2[j]) {",
      [
        7
      ]
    ],
    [
      "      sorted1[d] = arr1[i];",
      [
        8
      ]
    ],
    [
      "      i++;",
      [
        9
      ]
    ],
    [
      "    } else {",
      [
        10
      ]
    ],
    [
      "      sorted1[d] = arr2[j];",
      [
        11
      ]
    ],
    [
      "      j++;",
      [
        12
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    d++;",
      [
        13
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  while (i < m) {",
      [
        14
      ]
    ],
    [
      "    sorted1[d] = arr1[i];",
      [
        15
      ]
    ],
    [
      "    d++;",
      [
        16
      ]
    ],
    [
      "    i++;",
      [
        17
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  while (j < n) {",
      [
        18
      ]
    ],
    [
      "    sorted1[d] = arr2[j];",
      [
        19
      ]
    ],
    [
      "    d++;",
      [
        20
      ]
    ],
    [
      "    j++;",
      [
        21
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  return sorted1[k - 1];",
      [
        22
      ]
    ],
    [
      "}",
      null
    ]
  ]
}