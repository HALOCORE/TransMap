
### Python
def f_gold(num1, num2):   # --- py stmt 1
  len1 = len(num1)   # --- py stmt 2
  len2 = len(num2)   # --- py stmt 3
  if len1 == 0 or len2 == 0: return "0"   # --- py stmt 4
  result =[0] *(len1 + len2)   # --- py stmt 5
  i_n1 = 0   # --- py stmt 6
  i_n2 = 0   # --- py stmt 7
  for i in range(len1 - 1, - 1, - 1):   # --- py stmt 8
    carry = 0   # --- py stmt 9
    n1 = ord(num1[i])- 48   # --- py stmt 10
    i_n2 = 0   # --- py stmt 11
    for j in range(len2 - 1, - 1, - 1):   # --- py stmt 12
      n2 = ord(num2[j])- 48   # --- py stmt 13
      summ = n1 * n2 + result[i_n1 + i_n2] + carry   # --- py stmt 14
      carry = summ // 10   # --- py stmt 15
      result[i_n1 + i_n2] = summ % 10   # --- py stmt 16
      i_n2 += 1   # --- py stmt 17
    if(carry > 0): result[i_n1 + i_n2] += carry   # --- py stmt 18
    i_n1 += 1   # --- py stmt 19
  i = len(result)- 1   # --- py stmt 20
  while(i >= 0 and result[i] == 0): i -= 1   # --- py stmt 21
  if(i == - 1): return "0"   # --- py stmt 22
  s = ""   # --- py stmt 23
  while(i >= 0):   # --- py stmt 24
    s += chr(result[i] + 48)   # --- py stmt 25
    i -= 1   # --- py stmt 26
  return s   # --- py stmt 27


### JavaScript
"use strict";
function f_gold(num1, num2) {   // --- py stmt 1
  var len1 = num1.length;   // --- py stmt 2
  var len2 = num2.length;   // --- py stmt 3
  if (len1 == 0 || len2 == 0) return "0";   // --- py stmt 4
  var result = new Array(len1 + len2);   // --- py stmt 5
  var i_n1 = 0;   // --- py stmt 6
  var i_n2 = 0;   // --- py stmt 7
  for (var i = len1 - 1; i >= 0; i--) {   // --- py stmt 8
    var carry = 0;   // --- py stmt 9
    var n1 = num1.charCodeAt(i) - 48;   // --- py stmt 10
    i_n2 = 0;   // --- py stmt 11
    for (var j = len2 - 1; j >= 0; j--) {   // --- py stmt 12
      var n2 = num2.charCodeAt(j) - 48;   // --- py stmt 13
      var summ = n1 * n2 + result[i_n1 + i_n2] + carry;   // --- py stmt 14
      carry = Math.floor(summ / 10);   // --- py stmt 15
      result[i_n1 + i_n2] = summ % 10;   // --- py stmt 16
      i_n2++;   // --- py stmt 17
    }
    if (carry > 0) result[i_n1 + i_n2] += carry;   // --- py stmt 18
    i_n1++;   // --- py stmt 19
  }
  i = result.length - 1;   // --- py stmt 20
  while (i >= 0 && result[i] == 0) i--;   // --- py stmt 21
  if (i == -1) return "0";   // --- py stmt 22
  var s = "";   // --- py stmt 23
  while (i >= 0) {   // --- py stmt 24
    s += String.fromCharCode(result[i] + 48);   // --- py stmt 25
    i--;   // --- py stmt 26
  }
  return s;   // --- py stmt 27
}



