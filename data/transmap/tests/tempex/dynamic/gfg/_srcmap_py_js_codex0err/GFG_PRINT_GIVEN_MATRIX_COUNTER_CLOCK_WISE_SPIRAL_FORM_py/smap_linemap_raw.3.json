{
  "src_anno_stmts": [
    [
      "def f_gold(m, n, arr):",
      [
        1
      ]
    ],
    [
      "  k = 0 ;",
      [
        2
      ]
    ],
    [
      "  l = 0",
      [
        3
      ]
    ],
    [
      "  cnt = 0",
      [
        4
      ]
    ],
    [
      "  total = m * n",
      [
        5
      ]
    ],
    [
      "  while(k < m and l < n):",
      [
        6
      ]
    ],
    [
      "    if(cnt == total): break",
      [
        7
      ]
    ],
    [
      "    for i in range(k, m):",
      [
        8
      ]
    ],
    [
      "      print(arr[i][l], end = \" \")",
      [
        9
      ]
    ],
    [
      "      cnt += 1",
      [
        10
      ]
    ],
    [
      "    l += 1",
      [
        11
      ]
    ],
    [
      "    if(cnt == total): break",
      [
        12
      ]
    ],
    [
      "    for i in range(l, n):",
      [
        13
      ]
    ],
    [
      "      print(arr[m - 1][i], end = \" \")",
      [
        14
      ]
    ],
    [
      "      cnt += 1",
      [
        15
      ]
    ],
    [
      "    m -= 1",
      [
        16
      ]
    ],
    [
      "    if(cnt == total): break",
      [
        17
      ]
    ],
    [
      "    if(k < m):",
      [
        18
      ]
    ],
    [
      "      for i in range(m - 1, k - 1, - 1):",
      [
        19
      ]
    ],
    [
      "        print(arr[i][n - 1], end = \" \")",
      [
        20
      ]
    ],
    [
      "        cnt += 1",
      [
        21
      ]
    ],
    [
      "      n -= 1",
      [
        22
      ]
    ],
    [
      "    if(cnt == total): break",
      [
        23
      ]
    ],
    [
      "    if(l < n):",
      [
        24
      ]
    ],
    [
      "      for i in range(n - 1, l - 1, - 1):",
      [
        25
      ]
    ],
    [
      "        print(arr[k][i], end = \" \")",
      [
        26
      ]
    ],
    [
      "        cnt += 1",
      [
        27
      ]
    ],
    [
      "      k += 1",
      [
        28
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(m, n, arr) {",
      [
        1
      ]
    ],
    [
      "  var k = 0;",
      [
        2
      ]
    ],
    [
      "  var l = 0;",
      [
        3
      ]
    ],
    [
      "  var cnt = 0;",
      [
        4
      ]
    ],
    [
      "  var total = m * n;",
      [
        5
      ]
    ],
    [
      "  while (k < m && l < n) {",
      [
        6
      ]
    ],
    [
      "    if (cnt == total) break;",
      [
        7
      ]
    ],
    [
      "    for (var i = k; i < m; i++) {",
      [
        8
      ]
    ],
    [
      "      console.log(arr[i][l]);",
      [
        9
      ]
    ],
    [
      "      cnt += 1;",
      [
        10
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    l += 1;",
      [
        11
      ]
    ],
    [
      "    if (cnt == total) break;",
      [
        12
      ]
    ],
    [
      "    for (var i = l; i < n; i++) {",
      [
        13
      ]
    ],
    [
      "      console.log(arr[m - 1][i]);",
      [
        14
      ]
    ],
    [
      "      cnt += 1;",
      [
        15
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    m -= 1;",
      [
        16
      ]
    ],
    [
      "    if (cnt == total) break;",
      [
        17
      ]
    ],
    [
      "    if (k < m) {",
      [
        18
      ]
    ],
    [
      "      for (var i = m - 1; i > k - 1; i--) {",
      [
        19
      ]
    ],
    [
      "        console.log(arr[i][n - 1]);",
      [
        20
      ]
    ],
    [
      "        cnt += 1;",
      [
        21
      ]
    ],
    [
      "      }",
      null
    ],
    [
      "      n -= 1;",
      [
        22
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "    if (cnt == total) break;",
      [
        23
      ]
    ],
    [
      "    if (l < n) {",
      [
        24
      ]
    ],
    [
      "      for (var i = n - 1; i > l - 1; i--) {",
      [
        25
      ]
    ],
    [
      "        console.log(arr[k][i], end = \" \");",
      [
        26
      ]
    ],
    [
      "        cnt += 1;",
      [
        27
      ]
    ],
    [
      "      }",
      null
    ],
    [
      "      k += 1;",
      [
        28
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "  }",
      null
    ],
    [
      "}",
      null
    ]
  ]
}