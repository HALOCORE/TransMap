
### Python
def f_gold(blockSize, m, processSize, n):   # --- py stmt 1
  allocation =[- 1] * n   # --- py stmt 2
  for i in range(n):   # --- py stmt 3
    bestIdx = - 1   # --- py stmt 4
    for j in range(m):   # --- py stmt 5
      if blockSize[j] >= processSize[i]:   # --- py stmt 6
        if bestIdx == - 1: bestIdx = j   # --- py stmt 7
        elif blockSize[bestIdx] > blockSize[j]: bestIdx = j   # --- py stmt 8
    if bestIdx != - 1:   # --- py stmt 9
      allocation[i] = bestIdx   # --- py stmt 10
      blockSize[bestIdx] -= processSize[i]   # --- py stmt 11
  print("Process No.Process Size     Block no.")   # --- py stmt 12
  for i in range(n):   # --- py stmt 13
    print(i + 1, "         ", processSize[i], end = "         ")   # --- py stmt 14
    if allocation[i] != - 1: print(allocation[i] + 1)   # --- py stmt 15
    else: print("Not Allocated")   # --- py stmt 16

### JavaScript
"use strict";
function f_gold(blockSize, m, processSize, n) {   // --- py stmt 1
  var allocation = Array(n).fill(-1);   // --- py stmt 2
  for (var i = 0; i < n; i++) {   // --- py stmt 3
    var bestIdx = -1;   // --- py stmt 4
    for (var j = 0; j < m; j++) {   // --- py stmt 5
      if (blockSize[j] >= processSize[i]) {   // --- py stmt 6
        if (bestIdx == -1) bestIdx = j;   // --- py stmt 7
        else if (blockSize[bestIdx] > blockSize[j]) bestIdx = j;   // --- py stmt 8
      }
    }
    if (bestIdx != -1) {   // --- py stmt 9
      allocation[i] = bestIdx;   // --- py stmt 10
      blockSize[bestIdx] -= processSize[i];   // --- py stmt 11
    }
  }
  console.log("Process No.Process Size     Block no.");   // --- py stmt 12
  for (var i = 0; i < n; i++) {   // --- py stmt 13
    console.log(i + 1, "         ", processSize[i], end = "         ");   // --- py stmt 14
    if (allocation[i] != -1) console.log(allocation[i] + 1);   // --- py stmt 15
    else console.log("Not Allocated");   // --- py stmt 16
}



