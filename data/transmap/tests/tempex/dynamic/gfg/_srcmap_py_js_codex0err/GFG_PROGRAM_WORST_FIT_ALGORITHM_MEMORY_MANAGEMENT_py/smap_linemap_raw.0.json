{
  "src_anno_stmts": [
    [
      "def f_gold(blockSize, m, processSize, n):",
      [
        1
      ]
    ],
    [
      "  allocation =[- 1] * n",
      [
        2
      ]
    ],
    [
      "  for i in range(n):",
      [
        3
      ]
    ],
    [
      "    wstIdx = - 1",
      [
        4
      ]
    ],
    [
      "    for j in range(m):",
      [
        5
      ]
    ],
    [
      "      if blockSize[j] >= processSize[i]:",
      [
        6
      ]
    ],
    [
      "        if wstIdx == - 1: wstIdx = j",
      [
        7
      ]
    ],
    [
      "        elif blockSize[wstIdx] < blockSize[j]: wstIdx = j",
      [
        8
      ]
    ],
    [
      "    if wstIdx != - 1:",
      [
        9
      ]
    ],
    [
      "      allocation[i] = wstIdx",
      [
        10
      ]
    ],
    [
      "      blockSize[wstIdx] -= processSize[i]",
      [
        11
      ]
    ],
    [
      "  print(\"Process No.Process Size Block no.\")",
      [
        12
      ]
    ],
    [
      "  for i in range(n):",
      [
        13
      ]
    ],
    [
      "    print(i + 1, \"         \", processSize[i], end = \"     \")",
      [
        14
      ]
    ],
    [
      "    if allocation[i] != - 1: print(allocation[i] + 1)",
      [
        15
      ]
    ],
    [
      "    else: print(\"Not Allocated\")",
      [
        16
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "function f_gold(blockSize, m, processSize, n) {",
      [
        1
      ]
    ],
    [
      "  let allocation = Array(n).fill(-1);",
      [
        2
      ]
    ],
    [
      "  for (let i = 0; i < n; i++) {",
      [
        3
      ]
    ],
    [
      "    let wstIdx = -1;",
      [
        4
      ]
    ],
    [
      "    for (let j = 0; j < m; j++) {",
      [
        5
      ]
    ],
    [
      "      if (blockSize[j] >= processSize[i]) {",
      [
        6
      ]
    ],
    [
      "        if (wstIdx == -1) wstIdx = j;",
      [
        7
      ]
    ],
    [
      "        else if (blockSize[wstIdx] < blockSize[j]) wstIdx = j;",
      [
        8
      ]
    ],
    [
      "      }",
      null
    ],
    [
      "    }",
      null
    ],
    [
      "    if (wstIdx != -1) {",
      [
        9
      ]
    ],
    [
      "      allocation[i] = wstIdx;",
      [
        10
      ]
    ],
    [
      "      blockSize[wstIdx] -= processSize[i];",
      [
        11
      ]
    ],
    [
      "    }",
      null
    ],
    [
      "  }",
      null
    ],
    [
      "  console.log(\"Process No.Process Size Block no.\");",
      [
        12
      ]
    ],
    [
      "  for (let i = 0; i < n; i++) {",
      [
        13
      ]
    ],
    [
      "    console.log(i + 1, \"         \", processSize[i], end = \"     \");",
      [
        14
      ]
    ],
    [
      "    if (allocation[i] != -1) console.log(allocation[i] + 1);",
      [
        15
      ]
    ],
    [
      "    else console.log(\"Not Allocated\");",
      [
        16
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "}",
      null
    ]
  ]
}