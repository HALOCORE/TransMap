{
  "src_anno_stmts": [
    [
      "def f_gold(arr, n):",
      [
        1
      ]
    ],
    [
      "  mp = dict()",
      [
        2
      ]
    ],
    [
      "  Sum = 0",
      [
        3
      ]
    ],
    [
      "  count = 0",
      [
        4
      ]
    ],
    [
      "  for i in range(n):",
      [
        5
      ]
    ],
    [
      "    if(arr[i] == 0): arr[i] = - 1",
      [
        6
      ]
    ],
    [
      "    Sum += arr[i]",
      [
        7
      ]
    ],
    [
      "    if(Sum == 0): count += 1",
      [
        8
      ]
    ],
    [
      "    if(Sum in mp.keys()): count += mp[Sum]",
      [
        9
      ]
    ],
    [
      "    mp[Sum] = mp.get(Sum, 0)+ 1",
      [
        10
      ]
    ],
    [
      "  return count",
      [
        11
      ]
    ]
  ],
  "tar_anno_stmts": [
    [
      "const f_gold = (arr, n) => {",
      [
        1
      ]
    ],
    [
      "  let mp = {};",
      [
        2
      ]
    ],
    [
      "  let Sum = 0;",
      [
        3
      ]
    ],
    [
      "  let count = 0;",
      [
        4
      ]
    ],
    [
      "  for (let i = 0; i < n; i++) {",
      [
        5
      ]
    ],
    [
      "    if (arr[i] == 0) arr[i] = -1;",
      [
        6
      ]
    ],
    [
      "    Sum += arr[i];",
      [
        7
      ]
    ],
    [
      "    if (Sum == 0) count += 1;",
      [
        8
      ]
    ],
    [
      "    if (typeof(mp[Sum]) !== \"undefined\") count += mp[Sum];",
      [
        9
      ]
    ],
    [
      "    mp[Sum] = mp.get(Sum, 0) + 1;",
      [
        10
      ]
    ],
    [
      "  }",
      null
    ],
    [
      "  return count;",
      [
        11
      ]
    ],
    [
      "};",
      null
    ]
  ]
}