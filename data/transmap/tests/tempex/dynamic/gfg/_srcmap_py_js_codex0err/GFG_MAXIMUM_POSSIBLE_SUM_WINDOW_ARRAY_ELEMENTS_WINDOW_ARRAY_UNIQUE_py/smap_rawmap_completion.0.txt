
### Python
def f_gold(A, B, n):   # --- py stmt 1
  mp = set()   # --- py stmt 2
  result = 0   # --- py stmt 3
  curr_sum = curr_begin = 0   # --- py stmt 4
  for i in range(0, n):   # --- py stmt 5
    while A[i] in mp:   # --- py stmt 6
      mp.remove(A[curr_begin])   # --- py stmt 7
      curr_sum -= B[curr_begin]   # --- py stmt 8
      curr_begin += 1   # --- py stmt 9
    mp.add(A[i])   # --- py stmt 10
    curr_sum += B[i]   # --- py stmt 11
    result = max(result, curr_sum)   # --- py stmt 12
  return result   # --- py stmt 13


### JavaScript
"use strict";
function f_gold(A, B, n) {   // --- py stmt 1
  let mp = new Set();   // --- py stmt 2
  let result = 0;   // --- py stmt 3
  let curr_sum = curr_begin = 0;   // --- py stmt 4
  for (let i = 0; i < n; i++) {   // --- py stmt 5
    while (mp.has(A[i])) {   // --- py stmt 6
      mp.delete(A[curr_begin]);   // --- py stmt 7
      curr_sum -= B[curr_begin];   // --- py stmt 8
      curr_begin++;   // --- py stmt 9
    }
    mp.add(A[i]);   // --- py stmt 10
    curr_sum += B[i];   // --- py stmt 11
    result = Math.max(result, curr_sum);   // --- py stmt 12
  }
  return result;   // --- py stmt 13
}



