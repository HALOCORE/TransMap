{"func_id": "chatgptcomp", "params": {"messages": [{"role": "system", "content": "\nYou are a helpful assistant that translates Python code into JavaScript code.\nFor user requests, you output the code directly without explanations, and always in the same format.\nYou should ALWAYS output best-effort translation, even if you are provided partial code, modules, or code with dependencies.\nFor omitted part of the code in the source '...', you should also use '...' to denote the omitted part in the translation.\n"}, {"role": "user", "content": "**Translate this code from Python into Modern JavaScript:**\n### Python\n\n```python\nprint(\"Hello World\")\n```\n"}, {"role": "assistant", "content": "### JavaScript\n\n```javascript\n\"use strict\";\n\nconsole.log(\"Hello World\");\n```\n"}, {"role": "user", "content": "**Translate this code from Python into Modern JavaScript:**\n### Python\n\n```python\n# Some floating point constants\n\nONE_THIRD = 1.0/3.0\nONE_SIXTH = 1.0/6.0\nTWO_THIRD = 2.0/3.0\n\n# YIQ: used by composite video signals (linear combinations of RGB)\n# Y: perceived grey level (0.0 == black, 1.0 == white)\n# I, Q: color components\n#\n# There are a great many versions of the constants used in these formulae.\n# The ones in this library uses constants from the FCC version of NTSC.\n\ndef rgb_to_yiq(r, g, b):\n    y = 0.30*r + 0.59*g + 0.11*b\n    i = 0.74*(r-y) - 0.27*(b-y)\n    q = 0.48*(r-y) + 0.41*(b-y)\n    return (y, i, q)\n\ndef yiq_to_rgb(y, i, q):\n    # r = y + (0.27*q + 0.41*i) / (0.74*0.41 + 0.27*0.48)\n    # b = y + (0.74*q - 0.48*i) / (0.74*0.41 + 0.27*0.48)\n    # g = y - (0.30*(r-y) + 0.11*(b-y)) / 0.59\n\n    r = y + 0.9468822170900693*i + 0.6235565819861433*q\n    g = y - 0.27478764629897834*i - 0.6356910791873801*q\n    b = y - 1.1085450346420322*i + 1.7090069284064666*q\n\n    if r < 0.0:\n        r = 0.0\n    if g < 0.0:\n        g = 0.0\n    if b < 0.0:\n        b = 0.0\n    if r > 1.0:\n        r = 1.0\n    if g > 1.0:\n        g = 1.0\n    if b > 1.0:\n        b = 1.0\n    return (r, g, b)\n\n```\n"}], "max_length": 3420, "stop": "", "temp": 0, "stream": false, "engine": "gpt-3.5-turbo"}, "ret_val": {"completion": {"choices": [{"finish_reason": "stop", "index": 0, "message": {"content": "### JavaScript\n\n```javascript\n\"use strict\";\n\nconst ONE_THIRD = 1.0/3.0;\nconst ONE_SIXTH = 1.0/6.0;\nconst TWO_THIRD = 2.0/3.0;\n\nfunction rgb_to_yiq(r, g, b) {\n    const y = 0.30*r + 0.59*g + 0.11*b;\n    const i = 0.74*(r-y) - 0.27*(b-y);\n    const q = 0.48*(r-y) + 0.41*(b-y);\n    return [y, i, q];\n}\n\nfunction yiq_to_rgb(y, i, q) {\n    let r = y + 0.9468822170900693*i + 0.6235565819861433*q;\n    let g = y - 0.27478764629897834*i - 0.6356910791873801*q;\n    let b = y - 1.1085450346420322*i + 1.7090069284064666*q;\n\n    if (r < 0.0) {\n        r = 0.0;\n    }\n    if (g < 0.0) {\n        g = 0.0;\n    }\n    if (b < 0.0) {\n        b = 0.0;\n    }\n    if (r > 1.0) {\n        r = 1.0;\n    }\n    if (g > 1.0) {\n        g = 1.0;\n    }\n    if (b > 1.0) {\n        b = 1.0;\n    }\n    return [r, g, b];\n}\n```", "role": "assistant"}}], "created": 1687403690, "id": "chatcmpl-7U54Us79X3zaNU4Hfq2eqNKWiGt6H", "model": "gpt-3.5-turbo-0301", "object": "chat.completion", "usage": {"completion_tokens": 371, "prompt_tokens": 676, "total_tokens": 1047}}, "timespan": 12.393406480550766, "error_msg": null}}