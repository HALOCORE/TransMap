{"func_id": "chatgptcomp", "params": {"messages": [{"role": "system", "content": "\nYou are a helpful assistant that translates Python code into JavaScript code.\nFor user requests, you output the code directly without explanations, and always in the same format.\nYou should ALWAYS output best-effort translation, even if you are provided partial code, modules, or code with dependencies.\nFor omitted part of the code in the source '...', you should also use '...' to denote the omitted part in the translation.\n"}, {"role": "user", "content": "**Translate this code from Python into Modern JavaScript:**\n### Python\n\n```python\nprint(\"Hello World\")\n```\n"}, {"role": "assistant", "content": "### JavaScript\n\n```javascript\n\"use strict\";\n\nconsole.log(\"Hello World\");\n```\n"}, {"role": "user", "content": "**Translate this code from Python into Modern JavaScript:**\n### Python\n\n```python\n### networkDelayTime \nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict\nfrom typing import *\ndef f_gold(times: List[List[int]], n: int, k: int) -> int:\n    INF = 0x3F3F\n    g = defaultdict(list)\n    for u, v, w in times:\n        g[u - 1].append((v - 1, w))\n    dist = [INF] * n\n    dist[k - 1] = 0\n    q = [(0, k - 1)]\n    while q:\n        _, u = heappop(q)\n        for v, w in g[u]:\n            if dist[v] > dist[u] + w:\n                dist[v] = dist[u] + w\n                heappush(q, (dist[v], v))\n    ans = max(dist)\n    return -1 if ans == INF else ans\n```\n"}], "max_length": 3734, "stop": "", "temp": 0, "stream": false, "engine": "gpt-3.5-turbo"}, "ret_val": {"completion": {"choices": [{"finish_reason": "stop", "index": 0, "message": {"content": "### JavaScript\n\n```javascript\n\"use strict\";\n\nconst heapify = require('heapq').heapify;\nconst heappush = require('heapq').heappush;\nconst heappop = require('heapq').heappop;\nconst defaultdict = require('collections').defaultdict;\n\nfunction f_gold(times, n, k) {\n    const INF = 0x3F3F;\n    const g = defaultdict(list);\n    for (let i = 0; i < times.length; i++) {\n        const [u, v, w] = times[i];\n        g[u - 1].push([v - 1, w]);\n    }\n    const dist = Array(n).fill(INF);\n    dist[k - 1] = 0;\n    const q = [[0, k - 1]];\n    while (q.length > 0) {\n        const [_, u] = heappop(q);\n        for (let i = 0; i < g[u].length; i++) {\n            const [v, w] = g[u][i];\n            if (dist[v] > dist[u] + w) {\n                dist[v] = dist[u] + w;\n                heappush(q, [dist[v], v]);\n            }\n        }\n    }\n    const ans = Math.max(...dist);\n    return ans === INF ? -1 : ans;\n}\n```", "role": "assistant"}}], "created": 1687794643, "id": "chatcmpl-7VimBTGGJ2XfXg0yV2lTdUlVj5gKW", "model": "gpt-3.5-turbo-0301", "object": "chat.completion", "usage": {"completion_tokens": 289, "prompt_tokens": 362, "total_tokens": 651}}, "timespan": 11.93501287500112, "error_msg": null}}